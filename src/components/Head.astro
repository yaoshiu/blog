---
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description: string;
  image: string;
  type?: string;
}

const { title, description, image, type } = Astro.props;

const url = new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);
---

<head>
  <meta charset="utf-8" />
  <title>{title}</title>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <meta name="description" content={description} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:type" content={type ?? 'article'} />
  <meta property="og:url" content={url.href} />
  <meta property="og:image" content={imageURL.href} />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={imageURL.href} />
  <script is:inline>
    const mq = window.matchMedia('(prefers-color-scheme: dark)');

    function handleChange({ matches }) {
      document.documentElement.classList.toggle('dark', matches);
      window.localStorage.setItem('theme', matches ? 'dark' : 'light');
    }

    handleChange(mq);
    mq.addEventListener('change', handleChange);

    document.addEventListener('astro:after-swap', () => {
      document.documentElement.classList.toggle(
        'dark',
        localStorage.theme === 'dark',
      );
    });
  </script>

  <script>
    import { injectSpeedInsights } from '@vercel/speed-insights';

    injectSpeedInsights();
  </script>

  <ViewTransitions />
</head>
